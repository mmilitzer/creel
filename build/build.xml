<?xml version="1.0"?>
<project name="Creel" default="build" xmlns:creel="antlib:com.threecrickets.creel.ant">

	<property name="root" location="${basedir}/.." />

	<property file="${root}/build/private.properties" />
	<property file="${root}/build/custom.properties" />
	
	<property name="component.source" location="${root}/components/${component}/source" />
	<property name="component.resources" value="${root}/components/${component}/resources" />
	<property name="component.notices" location="${root}/components/notices" />
	<property name="ant.source" location="${root}/components/${component}-ant/source" />
	<property name="ant.resources" value="${root}/components/${component}-ant/resources" />
	<property name="eclipse.source" location="${root}/components/${component}-eclipse/source" />
	<property name="eclipse.resources" value="${root}/components/${component}-eclipse/resources" />

	<property name="dependencies" location="${root}/dependencies" />

	<property name="cache" location="${root}/build/cache" />
	<property name="cache.classes" location="${cache}/classes" />
	<property name="cache.jars" location="${cache}/jars" />
	<property name="cache.maven.pom" location="${cache}/maven/pom" />
	<property name="cache.maven.build" location="${cache}/maven/build" />
	<property name="cache.maven.eclipse" location="${cache}/maven/eclipse" />

	<property name="distribution" location="${root}/build/distribution" />
	<property name="distribution.content" location="${distribution}/content" />
	<property name="distribution.libraries" location="${distribution.content}/libraries" />
	<property name="distribution.jars" location="${distribution.libraries}/jars" />
	<property name="distribution.reference" value="${distribution.content}/reference" />
	<property name="distribution.api" value="${distribution.reference}/api/${component.group}/${component.artifact}/${component.version}${component.version.postfix}" />
	<property name="distribution.source" value="${distribution.reference}/source" />

	<property name="eclipse.group" value="org.eclipse.scout.sdk.deps" />

	<resources id="require-bundle">
		<string>org.eclipse.core.resources</string>
		<string>org.eclipse.core.runtime</string>
		<string>org.eclipse.core.variables</string>
		<string>org.eclipse.jdt.core</string>
		<string>org.eclipse.jdt.ui</string>
		<string>org.eclipse.ui</string>
		<string>org.eclipse.ui.console</string>
	</resources>
	<pathconvert property="require-bundle" refid="require-bundle" pathsep="," />
	
	<resources id="export-package-uses">
		<string>com.threecrickets.creel</string>
		<string>com.threecrickets.creel.eclipse.internal</string>
		<string>com.threecrickets.creel.event</string>
		<string>com.threecrickets.creel.util</string>
		<string>org.eclipse.core.commands</string>
		<string>org.eclipse.core.resources</string>
		<string>org.eclipse.core.runtime</string>
		<string>org.eclipse.core.runtime.preferences</string>
		<string>org.eclipse.core.variables</string>
		<string>org.eclipse.jdt.core</string>
		<string>org.eclipse.jface.preference</string>
		<string>org.eclipse.jface.viewers</string>
		<string>org.eclipse.jface.wizard</string>
		<string>org.eclipse.osgi.util</string>
		<string>org.eclipse.swt</string>
		<string>org.eclipse.swt.layout</string>
		<string>org.eclipse.swt.widgets</string>
		<string>org.eclipse.ui</string>
		<string>org.eclipse.ui.console</string>
		<string>org.eclipse.ui.handlers</string>
		<string>org.eclipse.ui.plugin</string>
		<string>org.eclipse.ui.wizards</string>
		<string>org.osgi.framework</string>
	</resources>
	<pathconvert property="export-package-uses" refid="export-package-uses" pathsep="," />

	<taskdef resource="com/threecrickets/creel/ant/antlib.xml" uri="antlib:com.threecrickets.creel.ant" classpath="${dependencies}/libraries/jars/com.threecrickets.creel/creel/${creel.version}/creel.jar" />

	<macrodef name="packages">
		<attribute name="suffix" />
		<sequential>
			<copy
				file="${distribution}/${component}-${component.version}${component.version.postfix}@{suffix}"
				todir="${packages.repo}/${packages.section}/${component.version}${component.version.postfix}"
				failonerror="false" />
		</sequential>
	</macrodef>

	<target name="dependencies" description="Resolve dependencies">
		<creel:run ref="dependencies" libraryDir="${cache.jars}" state="${cache.jars}/.creel">
			<module group="jline" name="jline" version="2.14.2" />
			<repository id="repo" url="${dependencies.repo}" />
		</creel:run>
	</target>

	<target name="ant-dependencies" description="Resolve Ant tasks dependencies" if="ant-tasks">
		<creel:run ref="ant-dependencies" libraryDir="${cache.jars}" state="${cache.jars}/.creel-ant">
			<module group="org.apache.ant" name="ant" version="1.9.6+" />
			<repository id="repo" url="${dependencies.repo}" />
		</creel:run>
	</target>

	<target name="eclipse-dependencies" description="Resolve Eclipse plugin dependencies" if="eclipse-plugin">
		<creel:run ref="eclipse-dependencies" libraryDir="${cache.jars}" state="${cache.jars}/.creel-eclipse">
			<module group="${eclipse.group}" name="org.eclipse.core.commands" />
			<module group="${eclipse.group}" name="org.eclipse.core.jobs" />
			<module group="${eclipse.group}" name="org.eclipse.core.resources" />
			<module group="${eclipse.group}" name="org.eclipse.core.runtime" />
			<module group="${eclipse.group}" name="org.eclipse.equinox.common" />
			<module group="${eclipse.group}" name="org.eclipse.equinox.preferences" />
			<module group="${eclipse.group}" name="org.eclipse.equinox.registry" />
			<module group="${eclipse.group}" name="org.eclipse.jdt.core" />
			<module group="${eclipse.group}" name="org.eclipse.jdt.ui" />
			<module group="${eclipse.group}" name="org.eclipse.jdt.debug.ui" />
			<module group="${eclipse.group}" name="org.eclipse.jface" />
			<module group="${eclipse.group}" name="org.eclipse.osgi" />
			<module group="${eclipse.group}" name="org.eclipse.swt.win32.win32.x86" />
			<module group="${eclipse.group}" name="org.eclipse.ui.console" />
			<module group="${eclipse.group}" name="org.eclipse.ui.workbench" />
			<!--<module group="${eclipse.group}" name="org.eclipse.ui.views" />-->
			<!-- Unfortunately the following two modules are not being deployed to Maven Central with Scout SDK -->
			<module group="org.eclipse.platform.debug" name="org.eclipse.core.variables" />
			<module group="org.eclipse.platform.debug" name="org.eclipse.debug.core" />
			<module group="org.eclipse.platform.debug" name="org.eclipse.debug.ui" />
			<rule type="excludeDependencies" />
			<rule type="repositories" group="org.eclipse.platform.*" repositories="repo" />
			<repository id="central" url="https://repo1.maven.org/maven2" />
			<repository id="repo" url="${dependencies.repo}" all="false" />
		</creel:run>
	</target>

	<target name="classes" depends="dependencies" description="Compile Java code">
		<mkdir dir="${cache.classes}" />
		<javac srcdir="${component.source}" destdir="${cache.classes}" source="${compile.version}" target="${compile.version}" includeAntRuntime="no" debug="${compile.debug}" bootclasspath="${compile.boot}">
			<classpath refid="dependencies" />
		</javac>
		<copy todir="${cache.classes}">
			<fileset dir="${component.resources}" />
		</copy>
	</target>

	<target name="ant-classes" depends="ant-dependencies, classes" description="Compile Ant tasks Java code" if="ant-tasks">
		<javac srcdir="${ant.source}" destdir="${cache.classes}" source="${compile.version}" target="${compile.version}" includeAntRuntime="no" debug="${compile.debug}" bootclasspath="${compile.boot}">
			<classpath refid="ant-dependencies" />
		</javac>
		<copy todir="${cache.classes}">
			<fileset dir="${ant.resources}" />
		</copy>
	</target>

	<target name="eclipse-classes" depends="eclipse-dependencies, classes" description="Compile Eclipse plugin Java code" if="eclipse-plugin">
		<javac srcdir="${eclipse.source}" destdir="${cache.classes}" source="${compile.version}" target="${compile.version}" includeAntRuntime="no" debug="${compile.debug}" bootclasspath="${compile.boot}">
			<classpath refid="eclipse-dependencies" />
		</javac>
		<copy todir="${cache.classes}">
			<fileset dir="${eclipse.resources}" />
		</copy>
	</target>

	<!--target name="javadocs" description="Create API documentation if not present">
		<available file="${distribution.api}" property="javadocs-present" />
		<antcall target="javadocs-overwrite" />
	</target-->

	<target name="javadocs-overwrite" depends="dependencies, ant-dependencies, eclipse-dependencies" description="Create API documentation" unless="javadocs-present">
		<javadoc
			destdir="${distribution.api}"
			access="protected" source="${compile.version}"
			windowtitle="${documentation.title} ${component.version}${component.version.postfix}" doctitle="${documentation.title} ${component.version}${component.version.postfix}"
			author="true" splitindex="true" use="true" version="true" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false"
			bootclasspath="${compile.boot}">
			<packageset dir="${component.source}" excludes="**/internal" />
			<packageset dir="${ant.source}" excludes="**/internal" />
			<packageset dir="${eclipse.source}" excludes="**/internal" />
			
			<link href="${documentation.jvm}" />
			<link href="http://help.eclipse.org/mars/topic/org.eclipse.platform.doc.isv/reference/api" />
			<!-- Apache Ant has no online javadocs -->
			<classpath refid="dependencies" />
			<classpath refid="ant-dependencies" />
			<classpath refid="eclipse-dependencies" />
			<bottom>
				<![CDATA[<i>${documentation.copyright}</i>]]>
			</bottom>
		</javadoc>
	</target>

	<target name="libraries" depends="classes, ant-classes" description="Create jar" unless="eclipse-plugin">
		<mkdir dir="${distribution.jars}" />
		<jar destfile="${distribution.jars}/${component.group}/${component.artifact}/${component.version}${component.version.postfix}/${component.artifact}.jar" basedir="${cache.classes}">
			<manifest>
				<attribute name="Implementation-Title" value="${component.group}:${component.artifact}" />
				<attribute name="Implementation-Version" value="${component.version}${component.version.postfix}" />
				<attribute name="Implementation-Vendor" value="Three Crickets" />
				<attribute name="Main-Class" value="com.threecrickets.creel.Tool" />
			</manifest>
		</jar>
	</target>
	
	<target name="eclipse-libraries" depends="eclipse-classes" description="Create Eclipse plugin jar" if="eclipse-plugin">
		<mkdir dir="${distribution.jars}" />
		<jar destfile="${distribution.jars}/${component.group}/${component.artifact}/${component.version}${component.version.postfix}/${component.artifact}.jar" basedir="${cache.classes}">
			<manifest>
				<attribute name="Implementation-Title" value="${component.group}:${component.artifact}" />
				<attribute name="Implementation-Version" value="${component.version}${component.version.postfix}" />
				<attribute name="Implementation-Vendor" value="Three Crickets" />
				<attribute name="Main-Class" value="com.threecrickets.creel.Tool" />
				
				<!-- OSGi bundle for Eclipse plugin -->
				<attribute name="Bundle-ManifestVersion" value="2" />
				<attribute name="Bundle-Name" value="Creel" />
				<attribute name="Bundle-Description" value="Creel is a lightweight and lightning-fast library for resolving and downloading JVM dependencies from Maven repositories." />
				<attribute name="Bundle-Vendor" value="Three Crickets" />
				<attribute name="Bundle-Copyright" value="Copyright 2015-2016 Three Crickets LLC." />
				<attribute name="Bundle-License" value="https://www.gnu.org/licenses/lgpl.html;description=GNU Lesser General Public License, Version 3" />
				<attribute name="Bundle-Version" value="${component.version}${component.version.postfix}" />
				<attribute name="Bundle-Icon" value="/icons/creel.png" />
				<attribute name="Bundle-SymbolicName" value="com.threecrickets.creel;singleton:=true" />
				<attribute name="Bundle-RequiredExecutionEnvironment" value="JavaSE-1.7" />
				<attribute name="Bundle-Activator" value="com.threecrickets.creel.eclipse.Plugin" />
				<attribute name="Bundle-ActivationPolicy" value="lazy" />
				<attribute name="Require-Bundle" value="${require-bundle}" />
				<attribute name="Export-Package" value="com.threecrickets.creel.eclipse;uses:=&quot;${export-package-uses}&quot;" />
			</manifest>
		</jar>
	</target>

	<!--target name="distribution" depends="libraries, eclipse-libraries, javadocs" description="Assemble distribution"-->
        <target name="distribution" depends="libraries, eclipse-libraries" description="Assemble distribution">
		<copy todir="${distribution.source}/${component.group}/${component.artifact}/${component.version}${component.version.postfix}">
			<fileset dir="${component.source}" />
		</copy>
		<copy todir="${distribution.content}">
			<fileset dir="${component.notices}" />
		</copy>
	</target>

	<target name="package-zip" depends="distribution" description="Create distribution package">
		<zip destfile="${distribution}/${component}-${component.version}${component.version.postfix}.zip">
			<fileset dir="${distribution.content}" />
		</zip>
	</target>

	<target name="deploy-maven" if="maven" depends="distribution" description="Deploy to Maven repository">
		<delete dir="${cache.maven.pom}" />
		<delete dir="${cache.maven.eclipse}" />
		<delete dir="${cache.maven.build}" />
		<mkdir dir="${cache.maven.build}" />
		<copy todir="${cache.maven.pom}">
			<fileset dir="${root}/build/maven" excludes="**/*~" />
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${component.version}${component.version.postfix}" />
					<token key="DEPENDENCIES" value="${dependencies.repo}" />
					<token key="CACHE" value="${cache.maven.build}" />
					<token key="ECLIPSE_CACHE" value="${cache.maven.eclipse}" />
					<token key="CONTENT" value="${distribution.content}" />
				</replacetokens>
			</filterchain>
		</copy>
		<copy todir="${cache.maven.eclipse}">
			<fileset dir="${root}/build/eclipse" excludes="**/*~" />
			<filterchain>
				<replacetokens>
					<token key="VERSION" value="${component.version}${component.version.postfix}" />
				</replacetokens>
			</filterchain>
		</copy>
		<exec executable="${maven}" dir="${cache.maven.pom}">
			<arg value="deploy" />
			<arg value="-DaltDeploymentRepository=${distribution.repo.id}::default::${distribution.repo}" />
			<!--arg value="-Djarsigner.keystore=${sign.keystore}" />
			<arg value="-Djarsigner.storepass=${sign.storepass}" />
			<arg value="-Djarsigner.alias=${sign.alias}" />
			<arg value="-Djarsigner.keypass=${sign.keypass}" />
			<arg value="-Djarsigner.tsa=http://timestamp.digicert.com" /-->
		</exec>
	</target>

	<target name="deploy-packages" if="packages.repo" description="Deploy to packages repository">
		<packages suffix="-installer.jar" />
		<packages suffix=".zip" />
		<packages suffix=".rpm" />
		<packages suffix=".deb" />
		<packages suffix="-osx-installer.zip" />
		<packages suffix="-windows-installer.exe" />
	</target>

	<target name="build" depends="distribution" description="Build distribution" />
	
	<target name="clean" description="Clean">
		<delete dir="${cache}" />
		<delete dir="${distribution}" />
	</target>
	
	<target name="rebuild" depends="clean, build" description="First clean and then build distribution" />
	
</project>
